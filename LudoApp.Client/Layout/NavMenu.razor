@* LudoApp.Client/Shared/NavMenu.razor *@
@inject LudoApp.Client.Services.AuthService AuthService
@inject NavigationManager Navigation

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">Ludo</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">

        @if (AuthService.IsLoggedIn)
        {
            <!-- NEW: Welcome Message Section -->
            <div class="nav-item px-3 user-info">
                <span class="nav-link">
                    Welcome, <span class="fw-bold text-warning">@AuthService.Username</span>!
                </span>
            </div>
            <hr class="sidebar-separator" /> <!-- New: A subtle horizontal line for separation -->
        }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @if (!AuthService.IsLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/signup">
                    <span class="bi bi-person-add-nav-menu" aria-hidden="true"></span> Sign Up
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/login">
                    <span class="bi bi-box-arrow-in-right-nav-menu" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" @onclick="HandleLogout">
                    <span class="bi bi-box-arrow-right-nav-menu" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        AuthService.AuthStateChanged += AuthStateChangedHandler;
    }

    private void AuthStateChangedHandler()
    {
        StateHasChanged();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
    }

    public void Dispose()
    {
        AuthService.AuthStateChanged -= AuthStateChangedHandler;
    }
}